#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <iostream>
#include <string.h>
#include <ctype.h>
//this cpp file is generated by copilot

// Function to encrypt the message
void caesarEncrypt(char* msg, int shift) {
    int i;
    for (i = 0; msg[i] != '\0'; i++) {
        char ch = msg[i];
        if (ch >= 'a' && ch <= 'z') {
            ch = (ch - 'a' + shift) % 26 + 'a';
        }
        else if (ch >= 'A' && ch <= 'Z') {
            ch = (ch - 'A' + shift) % 26 + 'A';
        }
        msg[i] = ch;
    }
}

// Function to decrypt the message
void caesarDecrypt(char* msg, int shift) {
    int i;
    for (i = 0; msg[i] != '\0'; i++) {
        char ch = msg[i];
        if (ch >= 'a' && ch <= 'z') {
            ch = (ch - 'a' - shift + 26) % 26 + 'a';
        }
        else if (ch >= 'A' && ch <= 'Z') {
            ch = (ch - 'A' - shift + 26) % 26 + 'A';
        }
        msg[i] = ch;
    }
}


void ayris_metni(const char* metin, char* sessiz, char* sesli, char* yapi) {
    setlocale(LC_ALL, "turkish");

    int sessiz_index = 0, sesli_index = 0, yapi_index = 0;
    const char* sesli_harfler = "aeýioöuüAEIÝOÖUÜ";

    for (int i = 0; metin[i] != '\0'; i++) {
        if (strchr(sesli_harfler, metin[i])) {
            sesli[sesli_index++] = metin[i];
            yapi[yapi_index++] = 'S';
        }
        else if (isalpha(metin[i])) {
            sessiz[sessiz_index++] = metin[i];
            yapi[yapi_index++] = 'C';
        }
        else {
            yapi[yapi_index++] = metin[i];
        }
    }
    sessiz[sessiz_index] = '\0';
    sesli[sesli_index] = '\0';
    yapi[yapi_index] = '\0';
}

int main() {
    setlocale(LC_ALL, "turkish");

    char metin[] = "merhaba dünya nasilsiniz";
    char sessiz[100], sesli[100], yapi[100];

    ayris_metni(metin, sessiz, sesli, yapi);

    printf("Sessiz harfler: %s\n", sessiz);
    printf("Sesli harfler: %s\n", sesli);
    printf("Yapý: %s\n", yapi);

    return 0;
}

//int main() {
//    char msg[100];
//    int shift;
//
//    printf("Enter a message to encrypt: ");
//    fgets(msg, sizeof(msg), stdin);
//    msg[strcspn(msg, "\n")] = '\0';  // Remove newline character
//
//    printf("Enter shift value: ");
//    scanf("%d", &shift);
//
//    caesarEncrypt(msg, shift);
//    printf("Encrypted message: %s\n", msg);
//
//    caesarDecrypt(msg, shift);
//    printf("Decrypted message: %s\n", msg);
//
//    system("pause");
//
//    return 0;
//}